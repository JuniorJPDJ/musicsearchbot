name: Docker build

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '25 15 * * *'
  push:
    branches: [ "master" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Extract Docker metadata for Deezer
        id: meta-deezer
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/deezer
          
      - name: Extract Docker metadata for Tidal
        id: meta-tidal
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/tidal

      - name: Build and push Docker image for Deezer
        id: build-and-push-deezer
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.deezer
          push: true
          tags: ${{ steps.meta-deezer.outputs.tags }}
          labels: ${{ steps.meta-deezer.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image for Tidal
        id: build-and-push-tidal
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.tidal
          push: true
          tags: ${{ steps.meta-tidal.outputs.tags }}
          labels: ${{ steps.meta-tidal.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
